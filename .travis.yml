# 1. Notifications
# notifications:

# 2. Env
env:
  global:
    - SF_LOG_BOOTSTRAP=true

# 3. Git
branches:
  only:
    - /^travis/ # travis branches
    - master
    - /^v(\d+)\.(\d+)\.(\d+)/ # version tags
    - wsl

# 4. Bootstrap
# os: linux
# dist: xenial
language: generic
# addons:
before_cache: ./.ci.sh before_cache
cache:
  directories:
    # common
    - $HOME/.local
    - $HOME/.npm
    # darwin
    - $HOME/.homebrew
    - $HOME/Library/Caches/Homebrew
    - $HOME/Library/Caches/pip
    # linux
    - $HOME/.cache/Homebrew
    - $HOME/.cache/pip
    - $HOME/.linuxbrew
    # windows
    - $HOME/AppData/Local/Temp/chocolatey

# 5. Steps
before_install: ./.ci.sh before_install
install: ./.ci.sh install
before_script: ./.ci.sh before_script
script: ./.ci.sh script
after_success: ./.ci.sh after_success
after_failure: ./.ci.sh after_failure
after_script: ./.ci.sh after_script

# 6. Deploy
before_deploy: ./.ci.sh before_deploy
deploy:
  provider: script
  script: ./.ci.sh deploy
  skip_cleanup: true
  on:
    tags: true
after_deploy: ./.ci.sh after_deploy


jobs:
  include:
    - stage: test
      name: "OSX High Sierra 10.14 (Xcode 11.3) with dev (common+) brew"
      os: osx
      osx_image: xcode11.3
      env: CACHE_NAME=osx-xcode11.3-dev SF_CI_BREW_INSTALL=dev
      if: type IN (push, cron) AND tag IS blank AND NOT branch IN (wsl)

    # - stage: test
    #   name: "Linux Bionic 18.04 with dev (common+) brew"
    #   os: linux
    #   dist: bionic
    #   env: CACHE_NAME=linux-bionic-dev SF_CI_BREW_INSTALL=dev
    #   if: type IN (push, cron) AND NOT branch IN (wsl)
