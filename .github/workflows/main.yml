# WARNING: DO NOT EDIT. AUTO-GENERATED CODE (.github/workflows.src/main.yml)
name: CI
'on':
  push:
    branches:
      - github*
      - master
    tags:
      - v*
jobs:
  main:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-16.04
          - ubuntu-18.04
          - ubuntu-20.04
          - macos-latest
        sf_ci_brew_install:
          - minimal
          - dev
    name: 'main-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: '${{ matrix.os }}'
    env:
      GH_TOKEN: '${{ secrets.GH_TOKEN }}'
      SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      TRANSCRYPT_PASSWORD: '${{ secrets.TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
    steps:
      - shell: bash
        run: |
          set -x
          [ ! -d /home/linuxbrew/.linuxbrew ] || sudo chmod -R go-w /home/linuxbrew/.linuxbrew
          [ ! -d /home/linuxbrew/.linuxbrew ] || sudo chown -R $(id -u):$(id -g) $(brew --prefix)
          ls -la $(brew --prefix)/Homebrew
          ls -la $(brew --prefix)/Homebrew
          which brew
          brew config
          cd $(brew --prefix)/Homebrew && git diff && cd -
          cd $(brew --prefix)/Homebrew/Library/Taps/homebrew/homebrew-core && git diff && cd -
          brew doctor || true
          brew install exiftool
          ls -la $(brew --prefix)/Homebrew
          ls -la $(brew --prefix)/Homebrew
          exit 1
      - uses: actions/checkout@v2
      - name: Run actions/checkout@v2 submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 \
          submodule update --init --force --recursive --depth=1
      - name: Fix brew permissions
        shell: bash
        run: |
      - shell: bash
        run: |
          ./.ci.sh before_install
      - shell: bash
        run: |
          ./.ci.sh install
      - shell: bash
        run: |
          ./.ci.sh before_script
      - shell: bash
        run: |
          ./.ci.sh script
      - shell: bash
        run: |
          ./.ci.sh after_failure || true
        if: failure()
      - shell: bash
        run: |
          ./.ci.sh after_success || true
      - shell: bash
        run: |
          ./.ci.sh after_script || true
        if: always()
      - shell: bash
        env:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHOOK }}'
          SLACK_CHANNEL: cloud-ci
          CI_STATUS: '${{ job.status }}'
        run: ./.ci.sh notifications || true
        if: always()
